name: build
on:
  push:
    paths-ignore: ["**.md"]
    branches: [ master ]
  pull_request:
    paths-ignore: ["**.md"]
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-corss:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-unknown-linux-musl
          - x86_64-pc-windows-gnu
          - x86_64-linux-android
          - aarch64-unknown-linux-gnu
          - aarch64-unknown-linux-musl
          - aarch64-linux-android
          - arm-unknown-linux-gnueabi
          - arm-unknown-linux-gnueabihf
          - arm-unknown-linux-musleabi
          - arm-unknown-linux-musleabihf
          - armv7-unknown-linux-gnueabi
          - armv7-unknown-linux-gnueabihf
          - armv7-unknown-linux-musleabi
          - armv7-unknown-linux-musleabihf
    steps:
      - uses: actions/checkout@v4
      - name: install toolchain
        uses: dtolnay/rust-toolchain@master
        with:
            toolchain: nightly
            targets: ${{ matrix.target }}
      - name: install cross
        run: cargo install cross --git https://github.com/cross-rs/cross
      - name: compile
        run: cross build --release --lib --target=${{ matrix.target }}
      - name: cbindgen
        run: |
          cargo install --force cbindgen
          cbindgen --config cbindgen.toml --crate realm --output target/${{ matrix.target }}/release/librealm.h
      - name: upload unix binary
        uses: actions/upload-artifact@v4
        with:
          name: realm-${{ matrix.target }}
          path: |
            target/${{ matrix.target }}/release/librealm.a
            target/${{ matrix.target }}/release/librealm.h
  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        target:
          - x86_64-pc-windows-msvc
    steps:
      - uses: actions/checkout@v4
      - name: install toolchain
        uses: dtolnay/rust-toolchain@master
        with:
            toolchain: nightly
            targets: ${{ matrix.target }}
      - name: compile
        run: cargo build --release --lib --target=${{ matrix.target }}
      - name: cbindgen
        run: |
          cargo install --force cbindgen
          cbindgen --config cbindgen.toml --crate realm --output target/${{ matrix.target }}/release/librealm.h
      - name: upload
        uses: actions/upload-artifact@v4
        with:
          name: realm-${{ matrix.target }}
          path: |
            target/${{ matrix.target }}/release/realm.lib
            target/${{ matrix.target }}/release/librealm.h
  build-apple:
    runs-on: macos-latest
    strategy:
      matrix:
        target:
          - x86_64-apple-darwin
          - aarch64-apple-darwin
          - aarch64-apple-ios
    steps:
      - uses: actions/checkout@v4
      - name: install toolchain
        uses: dtolnay/rust-toolchain@master
        with:
            toolchain: nightly
            targets: ${{ matrix.target }}
      - name: compile
        run: cargo build --release --lib --target=${{ matrix.target }}
      - name: cbindgen
        run: |
          cargo install --force cbindgen
          cbindgen --config cbindgen.toml --crate realm --output target/${{ matrix.target }}/release/librealm.h
      - name: upload
        uses: actions/upload-artifact@v4
        with:
          name: realm-${{ matrix.target }}
          path: |
            target/${{ matrix.target }}/release/librealm.a
            target/${{ matrix.target }}/release/librealm.h
